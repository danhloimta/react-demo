{"version":3,"sources":["components/header/header.js","components/body/list.js","components/body/detail.js","helpers/helper.js","pages/users/user.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","this","props","timer","Component","List","user","window","confirm","deleteUser","users","length","map","name","email","id","key","type","onClick","e","getUserEdit","handleDelete","colSpan","Detail","showForm","onChange","handleChange","placeholder","required","defaultValue","edit","reset","saveUser","clickShowForm","state","setTime","initTime","distance","Date","getTime","hours","Math","floor","minutes","seconds","saveToLocalStorage","data","localStorage","setItem","JSON","stringify","User","createTimeLoad","getListUser","setInterval","setState","event","target","value","indexUserEdit","findIndex","i","push","uuidv4","alert","parse","getItem","filter","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ffa2ae1e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './header.css'\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className=\"header row\">\n                <div className=\"header-info col-md-6 text-left pl-4\">\n                    Header\n                </div>\n                <div className=\"header-info col-md-6 text-right pr-4\">\n                    {this.props.timer}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super()\r\n    }\r\n\r\n    handleDelete (user) {\r\n        if(window.confirm('Are you sure')) {\r\n            this.props.deleteUser(user);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-6 body-info pt-4\">\r\n                <h5>List</h5>\r\n                <table className=\"table table-striped table-bordered table-hover mt-2\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.props.users?.length > 0 ? (\r\n                                this.props.users.map((user) => {\r\n                                    const {name, email, id} = user;\r\n                                    return (\r\n                                        <tr\r\n                                            key={id}\r\n                                        >\r\n                                            <td>{name}</td>\r\n                                            <td className=\"hover\">\r\n                                                <span>{email}</span>\r\n                                                <div className=\"button-action\">\r\n                                                    <button\r\n                                                        type=\"reset\"\r\n                                                        className=\"btn btn-sm btn-success mr-2\"\r\n                                                        onClick={(e) => {this.props.getUserEdit(user)}}\r\n                                                    >\r\n                                                        Edit\r\n                                                    </button>\r\n                                                    <button\r\n                                                        type=\"reset\"\r\n                                                        className=\"btn btn-sm btn-danger\"\r\n                                                        onClick={(e) => this.handleDelete(user)}\r\n                                                    >\r\n                                                        Delete\r\n                                                    </button>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            ) : (\r\n                                <tr>\r\n                                    <td colSpan=\"2\">No data</td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;","import React, { Component } from 'react';\n\nclass Detail extends Component {\n    constructor (props) {\n        super();\n        this.state = {}\n    }\n\n    showForm = () => {\n        if (this.props.showForm) {\n            return (\n                <form>\n                    <div className=\"form-detail\">\n                        <div className=\"form-group\">\n                            <input\n                                onChange={(e) => {this.props.handleChange(e)}}\n                                name=\"name\" type=\"name\"\n                                className=\"form-control\"\n                                placeholder=\"Enter name\"\n                                id=\"name\"\n                                required\n                                defaultValue={this.props.edit ? this.props.user.name : ''}\n                                key={this.props.user.id}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                onChange={(e) => {this.props.handleChange(e)}}\n                                name=\"email\" type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Enter email\"\n                                id=\"email\"\n                                required\n                                defaultValue={this.props.edit ? this.props.user.email : ''}\n                                key={this.props.user.id}\n                            />\n                        </div>\n                    </div>\n                    <button type=\"reset\" onClick={(e) => this.props.reset()} className=\"btn btn-danger mr-4\">Cancel</button>\n                    <button\n                        type=\"reset\"\n                        className=\"btn btn-primary\"\n                        onClick={(e) => {this.props.saveUser()}}\n                    >\n                        Save\n                    </button>\n                </form>\n            )\n        } else {\n            return (\n                <button onClick={(e) => this.props.clickShowForm()} className=\"btn btn-primary mr-4\">Create</button>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"col-md-6 pt-4\">\n                <h5>Detail</h5>\n                {this.showForm()}\n            </div>\n        );\n    }\n}\n\nexport default Detail;","export function setTime(initTime) {\r\n    var now = new Date().getTime();\r\n\r\n    var distance = now - initTime.getTime();\r\n\r\n    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n    var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n    return `${hours}:${minutes}:${seconds}`;\r\n}\r\n\r\nexport const saveToLocalStorage = (key, data) => {\r\n    localStorage.setItem(key, JSON.stringify(data));\r\n}\r\n\r\nexport const getFromLocalStorage = (key) => {\r\n    return JSON.parse(localStorage.getItem(key))\r\n}","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Header from '../../components/header/header';\r\nimport List from '../../components/body/list';\r\nimport Detail from '../../components/body/detail';\r\nimport './user.css'\r\nimport {\r\n    getFromLocalStorage,\r\n    saveToLocalStorage,\r\n    setTime\r\n} from '../../helpers/helper'\r\n\r\nclass User extends Component {\r\n    constructor (props) {\r\n        super();\r\n        this.state = {\r\n            users: [],\r\n            timer: null,\r\n            initTime: new Date(),\r\n            name: '',\r\n            email: '',\r\n            user: {},\r\n            edit: false,\r\n            showForm: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createTimeLoad();\r\n        this.getListUser();\r\n    }\r\n\r\n    createTimeLoad () {\r\n        setInterval(() => {\r\n            this.setState({\r\n                timer: setTime(this.state.initTime),\r\n            })\r\n        }, 1000);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    saveUser () {\r\n        if (this.state.name && this.state.email) {\r\n            let users = this.state.users;\r\n\r\n            if (this.state.edit) {\r\n                let indexUserEdit = users.findIndex(i => i.id === this.state.user.id);\r\n                let user = {id: this.state.user.id, name: this.state.name, email: this.state.email}\r\n                users[indexUserEdit] = user;\r\n            } else {\r\n                users.push({\r\n                    id: uuidv4(),\r\n                    name: this.state.name,\r\n                    email: this.state.email\r\n                })\r\n            }\r\n\r\n            saveToLocalStorage('users', users);\r\n            this.getListUser();\r\n            this.reset()\r\n        } else {\r\n            alert('Enter Name and Email');\r\n        }\r\n    }\r\n\r\n    getListUser () {\r\n        const users = getFromLocalStorage('users');\r\n\r\n        if (users?.length) {\r\n            this.setState({\r\n                users: users\r\n            });\r\n        }\r\n    }\r\n\r\n    getUserEdit (user) {\r\n        this.setState({\r\n            user: user,\r\n            name: user.name,\r\n            email: user.email,\r\n            edit: true,\r\n            showForm: true\r\n        })\r\n    }\r\n\r\n    deleteUser (user) {\r\n        let users = this.state.users.filter((i) => i.id !== user.id);\r\n        saveToLocalStorage('users', users);\r\n        this.getListUser();\r\n    }\r\n\r\n    showForm () {\r\n        this.setState({\r\n            showForm: true\r\n        })\r\n    }\r\n\r\n    reset () {\r\n        this.setState({\r\n            edit: false,\r\n            name: '',\r\n            email: '',\r\n            showForm: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header timer={this.state.timer} />\r\n\r\n                <div className=\"row body\">\r\n                    <List \r\n                        users={this.state.users}\r\n                        getUserEdit={(user) => this.getUserEdit(user)}\r\n                        deleteUser={(user) => this.deleteUser(user)}\r\n                    />\r\n                    <Detail\r\n                        saveUser={(user) => this.saveUser(user)}\r\n                        handleChange={(e) => this.handleChange(e)}\r\n                        user={this.state.user}\r\n                        edit={this.state.edit}\r\n                        reset={() => this.reset()}\r\n                        showForm={this.state.showForm}\r\n                        clickShowForm={(e) => this.showForm()}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default User;","import React from 'react';\nimport User from './pages/users/user';\n\nfunction App() {\n    return (\n        <div className=\"App container\">\n            <User/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}